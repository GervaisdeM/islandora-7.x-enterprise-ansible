---
### milestone 1 - Installing Fedora
# --volume: {{ FEDORA_HOME }}
# --volume: {{ FEDORA_HOME }}/data
# --volume: {{ FEDORA_HOME }}/server/config
- name: Install git
  apt:
    pkg: git
    state: present
    update_cache: true
    cache_valid_time: 86400

- name: "Download Fedora v{{ FEDORA_VERSION }}"
  get_url:
    url: "https://github.com/fcrepo3/fcrepo/releases/download/v{{ FEDORA_VERSION }}/fcrepo-installer-{{ FEDORA_VERSION }}.jar"
    dest: "/tmp/fcrepo-installer-{{ FEDORA_VERSION }}.jar"

- name: Prepare the local environment variables
  template:
    src: fedora-profile.sh.j2 
    dest: /etc/profile.d/fedora-profile.sh

# Installing Djatoka
- name: "Create {{ DJATOKA_HOME }} folder"
  file: 
    path: "{{ DJATOKA_HOME }}" 
    state: directory
    
- name: "Download Djatoka"
  get_url:
    url: "http://downloads.sourceforge.net/project/djatoka/djatoka/1.1/adore-djatoka-1.1.tar.gz"
    dest: /tmp/adore-djatoka-1.1.tar.gz
    timeout: 120

- name: Untar Djatoka
  shell: "tar -xzf /tmp/adore-djatoka-1.1.tar.gz -C {{ DJATOKA_HOME }} --strip-components=1"
  args:
    executable: /bin/bash
    creates: "{{ DJATOKA_HOME }}/bin/Linux-x86-64/kdu_compress"

- name: Symlink kdu_compress for Large Image Solution Pack
  file:
    src: "{{ DJATOKA_HOME }}/bin/Linux-x86-64/kdu_compress"
    dest: /usr/bin/kdu_compress
    state: link

- name: Deploy Djatoka
  copy:
    src: "{{ DJATOKA_HOME }}/dist/adore-djatoka.war"
    dest: "{{ TOMCAT_HOME }}/webapps/adore-djatoka.war"
    remote_src: yes

- name: "Copy kdu_libs.conf"
  copy:
    src: kdu_libs.conf
    dest: /etc/ld.so.conf.d/kdu_libs.conf

- name: Restart tomcat
  service:
    name: tomcat7
    state: restarted

- name: Wait for adore-djatoka
  wait_for: 
    path: "{{ TOMCAT_HOME }}/webapps/adore-djatoka/WEB-INF/classes"

- name: "DJATOKA: Change the environment variables"
  blockinfile:
    dest: "{{ TOMCAT_HOME }}/bin/startup.sh"
    block:  |
      . {{ DJATOKA_HOME }}/bin/env.sh
      export JAVA_OPTS
      echo $JAVA_OPTS
      exec "$PRGDIR"/"$EXECUTABLE" start "$@"

- name: "DJATOKA: Modify the env.sh file"
  replace:
    regexp: "{{ item.old }}"
    replace: "{{ item.new }}"
    dest: "{{ DJATOKA_HOME }}/bin/env.sh"
  with_items:
    - old: 'LAUNCHDIR=\$PWD'
      new: "LAUNCHDIR={{ DJATOKA_HOME }}/bin"
    - old: 'cd ..'
      new: '# cd ..'
    - old: 'DJATOKA_HOME=`pwd`'
      new: "DJATOKA_HOME={{ DJATOKA_HOME }}"
    - old: 'cd \$LAUNCHDIR'
      new: '# cd $LAUNCHDIR'
    - old: 'for line in'
      new: '# for line in'
    - old: '  do'
      new: '#   do'
    - old: '  classpath'
      new: '#   classpath'
    - old: 'done'
      new: '# done'
    - old: 'CLASSPATH='
      new: '# CLASSPATH='
    - old: 'JAVA_OPTS="\$DEBUG -Djava.awt.headless=true  -Xmx512M -Xms64M -Dkakadu.home=\$KAKADU_HOME -Djava.library.path=\$LIBPATH\/\$PLATFORM \$KAKADU_LIBRARY_PATH"'
      new: 'JAVA_OPTS="$JAVA_OPTS -Djava.awt.headless=true -Dkakadu.home=$KAKADU_HOME -Djava.library.path=$LIBPATH/$PLATFORM $KAKADU_LIBRARY_PATH"'
- lineinfile:
    dest: "{{ DJATOKA_HOME }}/bin/env.sh"
    insertafter: "# setup environment variables for shell script"
    regexp: '^CURRENTDIR=\$PWD'
    line: "CURRENTDIR=$PWD"

- name: "Setup Djatoka Logging"
  copy:
    src: log4j.properties
    dest: "{{ TOMCAT_HOME }}/webapps/adore-djatoka/WEB-INF/classes/log4j.properties"

